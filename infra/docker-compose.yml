name: digivault

services:
  app:
    build:
      context: ../apps/api
      dockerfile: Dockerfile
    container_name: dv-api
    volumes:
      - ../apps/api:/var/www/html:cached
      # Named volumes for dependency/storage so they don't sync to the host
      - laravel_vendor:/var/www/html/vendor
      - laravel_storage:/var/www/html/storage
    depends_on:
      - db
      - minio
      - mailhog

  nginx:
    image: nginx:1.27-alpine
    container_name: dv-nginx
    ports:
      - "8000:80"
    volumes:
      - ../apps/api/public:/var/www/html/public:cached
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ../apps/api:/var/www/html:cached
      - laravel_vendor:/var/www/html/vendor
    depends_on:
      - app

  db:
    image: postgres:16
    container_name: dv-postgres
    environment:
      POSTGRES_DB: digivault
      POSTGRES_USER: digivault
      POSTGRES_PASSWORD: digivault
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  web:
    build:
      context: ../apps/web
      dockerfile: Dockerfile
    container_name: dv-web
    environment:
      NODE_ENV: production
      PORT: 3000
      # Base URL untuk fetch dari Next.js (via Nginx)
      # NEXT_PUBLIC_API_URL: http://nginx/api
    expose:
      - "3000"
    depends_on:
      - app

  adminer:
    image: adminer:4
    container_name: dv-adminer
    ports:
      - "8080:8080"
    depends_on:
      - db

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: dv-mailhog
    ports:
      - "8025:8025" # UI http://localhost:8025
    # SMTP default: host mailhog port 1025

  minio:
    image: minio/minio:latest
    container_name: dv-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000" # S3 API
      - "9001:9001" # Console UI
    volumes:
      - minio_data:/data

volumes:
  pgdata:
  minio_data:
  laravel_vendor:
  laravel_storage: